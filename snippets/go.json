{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"wrap error": {
		"prefix": "errorf",
		"body": [
			"xerrors.Errorf(\"$1: %w\", err)"
		]
	},
	"dump with spew": {
		"prefix": "dump",
		"body": [
			"spew.Dump($1)"
		]
	},
	"dump with %+v": {
		"prefix": "print",
		"body": [
			"fmt.Printf(\"%+v\\n\", $1)"
		]
	},
	"test case": {
		"prefix": "test",
		"body": [
			"func Test${1}(t *testing.T) {",
			"  $2",
			"}"
		]
	},
	"subtest": {
		"prefix": "subtest",
		"body":[
			"t.Run(\"$1\", func(t *testing.T) {",
			"\t$2",
			"})"
		]
	},
	"gotexpect": {
		"prefix": "got_expect",
		"body": [
			"t.Fatalf(\"got %+v, expect %+v\\n\", $1, $2)"
		]
	},
	"unexpected": {
		"prefix": "unexpected",
		"body": [
			"t.Fatalf(\"unexpected $1, got %+v\\n\", $2)"
		]
	}
}
